parameters:
- name: SandboxClusterName
  displayName: Target Sandbox Kubernetes Cluster
  type: string
  default: DPPUBMGMTNPDaks
  values:
  - DPPUBMGMTNPDaks


trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: GO111MODULE
  value: on
- name: CGO_ENABLED
  value: '0'
- name: GOROOT
  value: '/opt/hostedtoolcache/go/1.14.6/x64'
- name: GOPRIVATE
  value: 'dev.azure.com/sede-ds-adp'
- name: REGISTRY
  value: shellai.azurecr.io/sedp/kubeform
- group: gogit
- group: shellai_acr
- name: IS_MASTER_BRANCH
  # value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/feature/tn-merging-upstream')] # XXX: Use master
- name: StratosBranch
  value: feature/tn-installing-aks-test # XXX: Use master


resources:
  repositories:
  - repository: kfc
    type: git
    name: Platform - General/kfc
  - repository: stratos
    ref: refs/heads/feature/tn-installing-aks-test
    type: github
    endpoint: 'Sede-x Github (ThomasNal)'
    # endpoint: 'Sede-x Github' # XXX: Fix the service connection permissions
    name: sede-x/stratos-core-bootstrap

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - checkout: self
      displayName: Checkout kubeform
      persistCredentials: true
    - checkout: kfc
      displayName: Checkout kfc
      persistCredentials: true

    - script: git checkout ${BUILD_SOURCEBRANCH/#refs\/heads\/}
      workingDirectory: kfc
      displayName: Checkout kfc source branch

    - script: echo $DOCKER_PASSWORD | docker login shellai.azurecr.io -u $DOCKER_LOGIN --password-stdin
      displayName: Login to ShellAI ACR
      env:
        DOCKER_LOGIN: $(DOCKER_LOGIN)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
    - task: GoTool@0
      inputs:
        version: '1.14.6'
    - task: KubectlInstaller@0
      inputs:
        kubectlVersion: "1.18.3"
    - task: NodeTool@0
    - script: |
        git config --global user.email "sedp-ci@shell.com"
        git config --global user.name "Azure Pipeline"
        git config --global url."https://test:${GIT_READ_TOKEN}@dev.azure.com/sede-ds-adp/Platform%20-%20General/_git/kubeform".insteadOf https://dev.azure.com/sede-ds-adp/kubeform
      displayName: Set git properties

    # Build kubeform
    - script: make gen
      displayName: Run kubeform codegen
      env:
        CRD_PATH: crds
      workingDirectory: kubeform
    - script: go mod tidy && go mod vendor
      displayName: Update vendored packages in kubeform
      workingDirectory: kubeform
    - script: make build
      displayName: Build kubeform binaries
      workingDirectory: kubeform
    - script: make gen
      displayName: Run kubeform codegen
      env:
        CRD_PATH: crds
      workingDirectory: kubeform
    - script: |
        git status
        git add -A
        git commit -m "[skip ci] Update Terraform modules"
        git push origin HEAD:${BUILD_SOURCEBRANCH/#refs\/heads\/}
      displayName: Commit & push results to kubeform
      workingDirectory: kubeform

    # Build kfc binary
    - script: git rev-parse HEAD > ../kubeform-sha
      displayName: Store kubeform revision for kfc to use
      workingDirectory: kubeform
    - script: go mod edit -replace "kubeform.dev/kubeform=dev.azure.com/sede-ds-adp/kubeform.git@$(cat ../kubeform-sha)"
      displayName: Point kfc to the right revision of kubeform
      workingDirectory: kfc
    - script: go mod tidy && go mod vendor
      displayName: Update vendored version of kubeform in kfc
      workingDirectory: kfc
    - script: |
        git add -A
        git commit -m "[skip ci] Update Terraform modules"
        git push -f origin HEAD:${BUILD_SOURCEBRANCH}
      displayName: Commit & push changes to kfc
      workingDirectory: kfc
    - script: make build
      displayName: Build kfc binaries
      workingDirectory: kfc

    # Build kfc container
    - script: make container
      displayName: Build kfc containers
      workingDirectory: kfc
    - script: make push
      displayName: Push kfc containers
      workingDirectory: kfc
    - script: echo "##vso[task.setvariable variable=DOCKER_TAG;isOutput=true]$(cat bin/.container-tag)"
      displayName: Set DOCKER_TAG
      name: setDockerTag
      workingDirectory: kfc
    - script: echo $(setDockerTag.DOCKER_TAG)
      displayName: Echo DOCKER_TAG

- stage: DeploySandbox
  condition: 'and(succeeded(), eq(variables.IS_MASTER_BRANCH, false))'
  dependsOn:
  - Build
  variables:
    ComponentsPath: components/sandbox/${{ parameters.SandboxClusterName }}
    DockerTag: $[ stageDependencies.Build.Build.outputs['setDockerTag.DOCKER_TAG'] ]
  jobs:
  - deployment: Deploy
    environment: sbx
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            displayName: Checkout kubeform
          - checkout: stratos
            displayName: Checkout stratos
            persistCredentials: true
          - script: git checkout $(StratosBranch)
            displayName: Checkout stratos branch
            workingDirectory: stratos-core-bootstrap
          - script: |
              git config --global user.email "sedp-ci@shell.com"
              git config --global user.name "Azure Pipelines"
            displayName: Set git properties

          # Update crd-conversion config
          - script: npm install js-yaml
            displayName: Install node packages
            workingDirectory: kubeform/util
          - script: node util/update-configmap-resource-schemas.js crds ../stratos-core-bootstrap/$(ComponentsPath)/crd-conversion/crd-conversion-cm.yaml
            displayName: Update schemas in ConfigMap
            workingDirectory: kubeform
          - script: |
              git pull
              git add $(ComponentsPath)/crd-conversion/crd-conversion-cm.yml
              git commit -m "[kubeform] Update crd-conversion config"
              git push
            displayName: Push updates to crd-conversion config
            workingDirectory: stratos-core-bootstrap

          # Update kubeform deployment
          - script: |
              sed -i.bak -e 's/^\(.*tag: .*\):.*/\1:'$(DockerTag)'/g' $(ComponentsPath)/kubeform/kubeform-hr.yaml
            displayName: Update deployment manifest
            workingDirectory: stratos-core-bootstrap

          # Update stratos-crds
          - script: for crd in $CRDS; do sed -i.bak -e '/^  version:/d' -e '/^  group:/r kubeform/util/conversion-patch.yaml' $crd; done
            displayName: Patch CRDs with conversion config
            env:
              CRDS: stratos-core-bootstrap/$(ComponentsPath)/stratos-crds/modules.kubeform.com_*.yaml
          - script: |
              git pull
              git add $(ComponentsPath)/stratos-crds/modules.kubeform.com_*.yaml
              git commit -m "[kubeform] Update Stratos CRDs"
              git push
            displayName: Push updates to Stratos CRDs
            workingDirectory: stratos-core-bootstrap

- stage: DeployStaging
  condition: 'and(succeeded(), eq(variables.IS_MASTER_BRANCH, true))'
  dependsOn:
  - Build
  variables:
    ComponentsPath: components/staging/AKS-Test
    DockerTag: $[ stageDependencies.Build.Build.outputs['setDockerTag.DOCKER_TAG'] ]
  jobs:
  - deployment: Deploy
    environment: staging
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            displayName: Checkout kubeform
          - checkout: stratos
            displayName: Checkout stratos
            persistCredentials: true
          - script: git checkout feature/tn-installing-aks-test
            displayName: Checkout stratos branch
            workingDirectory: stratos-core-bootstrap
          - script: |
              git config --global user.email "sedp-ci@shell.com"
              git config --global user.name "Azure Pipelines"
            displayName: Set git properties

          # Update crd-conversion config
          - script: npm install js-yaml
            displayName: Install node packages
            workingDirectory: kubeform/util
          - script: node util/update-configmap-resource-schemas.js crds ../stratos-core-bootstrap/$(ComponentsPath)/crd-conversion/crd-conversion-cm.yaml
            displayName: Update schemas in ConfigMap
            workingDirectory: kubeform
          - script: |
              git pull
              git add $(ComponentsPath)/crd-conversion/crd-conversion-cm.yml
              git commit -m "[kubeform] Update crd-conversion config"
              git push
            displayName: Push updates to crd-conversion config
            workingDirectory: stratos-core-bootstrap

          # Update kubeform deployment
          - script: |
              sed -i.bak -e 's/^\(.*tag: .*\):.*/\1:'$(DockerTag)'/g' $(ComponentsPath)/kubeform/kubeform-hr.yaml
            displayName: Update deployment manifest
            workingDirectory: stratos-core-bootstrap

          # Update stratos-crds
          - script: for crd in stratos-core-bootstrap/$(ComponentsPath)/stratos-crds/modules.kubeform.com_*.yaml; do sed -i.bak -e '/^  version:/d' -e '/^  group:/r kubeform/util/conversion-patch.yaml' $crd; done
            displayName: Patch CRDs with conversion config
          - script: |
              git pull
              git add $(ComponentsPath)/stratos-crds/modules.kubeform.com_*.yaml
              git commit -m "[kubeform] Update Stratos CRDs"
              git push
            displayName: Push updates to Stratos CRDs
            workingDirectory: stratos-core-bootstrap

- stage: DeployProduction
  condition: 'and(succeeded(), eq(variables.IS_MASTER_BRANCH, true))'
  dependsOn:
  - Build
  - DeployStaging
  variables:
    DockerTag: $[ stageDependencies.Build.Build.outputs['setDockerTag.DOCKER_TAG'] ]
    NpdComponentsPath: components/npd/f4dpnpd
    PrdComponentsPath: components/prd/f4dpprd
    StratosCrdsPaths: components/base/stratos-crds/modules.kubeform.com_*.yaml
  jobs:
  - deployment: Deploy
    environment: PRD
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            displayName: Checkout kubeform
          - checkout: stratos
            displayName: Checkout stratos
            persistCredentials: true
          - script: git checkout master
            displayName: Checkout stratos branch
            workingDirectory: stratos-core-bootstrap
          - script: |
              git config --global user.email "sedp-ci@shell.com"
              git config --global user.name "Azure Pipelines"
            displayName: Set git properties

          # Update crd-conversion config
          - script: npm install js-yaml
            displayName: Install node packages
            workingDirectory: kubeform/util
          - script: node util/update-configmap-resource-schemas.js crds ../stratos-core-bootstrap/$(NpdComponentsPath)/crd-conversion/crd-conversion-cm.yaml
            displayName: Update schemas in Npd ConfigMap
            workingDirectory: kubeform
          - script: node util/update-configmap-resource-schemas.js crds ../stratos-core-bootstrap/$(PrdComponentsPath)/crd-conversion/crd-conversion-cm.yaml
            displayName: Update schemas in Prd ConfigMap
            workingDirectory: kubeform
          - script: |
              git pull
              git add $(NpdComponentsPath)/crd-conversion/crd-conversion-cm.yaml
              git add $(PrdComponentsPath)/crd-conversion/crd-conversion-cm.yaml
              git commit -m "[kubeform] Update crd-conversion config in NPD/PRD"
              git push
            displayName: Push updates to crd-conversion config
            workingDirectory: stratos-core-bootstrap

          # Update kubeform deployment
          - script: |
              sed -i.bak -e 's/^\(.*tag: .*\):.*/\1:'$(DockerTag)'/g' $(NpdComponentsPath)/kubeform/kubeform-hr.yaml
              sed -i.bak -e 's/^\(.*tag: .*\):.*/\1:'$(DockerTag)'/g' $(PrdComponentsPath)/kubeform/kubeform-hr.yaml
            displayName: Update deployment manifest
            workingDirectory: stratos-core-bootstrap

          # Update stratos-crds
          - script: for crd in stratos-core-bootstrap/$(StratosCrdsPaths); do sed -i.bak -e '/^  version:/d' -e '/^  group:/r kubeform/util/conversion-patch.yaml' $crd; done
            displayName: Patch CRDs with conversion config
          - script: |
              git pull
              git add $(StratosCrdsPaths)
              git commit -m "[kubeform] Update Stratos CRDs in NPD/PRD"
              git push
            displayName: Push updates to Stratos CRDs
            workingDirectory: stratos-core-bootstrap
