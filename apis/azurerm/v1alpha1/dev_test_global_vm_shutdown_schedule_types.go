/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DevTestGlobalVmShutdownSchedule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DevTestGlobalVmShutdownScheduleSpec   `json:"spec,omitempty"`
	Status            DevTestGlobalVmShutdownScheduleStatus `json:"status,omitempty"`
}

type DevTestGlobalVmShutdownScheduleSpecNotificationSettings struct {
	Enabled bool `json:"enabled" tf:"enabled"`
	// +optional
	TimeInMinutes int64 `json:"timeInMinutes,omitempty" tf:"time_in_minutes,omitempty"`
	// +optional
	WebhookURL string `json:"webhookURL,omitempty" tf:"webhook_url,omitempty"`
}

type DevTestGlobalVmShutdownScheduleSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	DailyRecurrenceTime string `json:"dailyRecurrenceTime" tf:"daily_recurrence_time"`
	// +optional
	Enabled  bool   `json:"enabled,omitempty" tf:"enabled,omitempty"`
	Location string `json:"location" tf:"location"`
	// +kubebuilder:validation:MaxItems=1
	NotificationSettings []DevTestGlobalVmShutdownScheduleSpecNotificationSettings `json:"notificationSettings" tf:"notification_settings"`
	// +optional
	Tags             map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
	Timezone         string            `json:"timezone" tf:"timezone"`
	VirtualMachineID string            `json:"virtualMachineID" tf:"virtual_machine_id"`
}

type DevTestGlobalVmShutdownScheduleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *DevTestGlobalVmShutdownScheduleSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	TerraFormState string `json:"terraformState,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DevTestGlobalVmShutdownScheduleList is a list of DevTestGlobalVmShutdownSchedules
type DevTestGlobalVmShutdownScheduleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DevTestGlobalVmShutdownSchedule CRD objects
	Items []DevTestGlobalVmShutdownSchedule `json:"items,omitempty"`
}
