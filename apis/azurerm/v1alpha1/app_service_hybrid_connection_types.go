/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AppServiceHybridConnection struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppServiceHybridConnectionSpec   `json:"spec,omitempty"`
	Status            AppServiceHybridConnectionStatus `json:"status,omitempty"`
}

type AppServiceHybridConnectionSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	AppServiceName string `json:"appServiceName" tf:"app_service_name"`
	Hostname       string `json:"hostname" tf:"hostname"`
	// +optional
	NamespaceName string `json:"namespaceName,omitempty" tf:"namespace_name,omitempty"`
	Port          int64  `json:"port" tf:"port"`
	RelayID       string `json:"relayID" tf:"relay_id"`
	// +optional
	RelayName         string `json:"relayName,omitempty" tf:"relay_name,omitempty"`
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	SendKeyName string `json:"sendKeyName,omitempty" tf:"send_key_name,omitempty"`
	// +optional
	SendKeyValue string `json:"-" sensitive:"true" tf:"send_key_value,omitempty"`
	// +optional
	ServiceBusNamespace string `json:"serviceBusNamespace,omitempty" tf:"service_bus_namespace,omitempty"`
	// +optional
	ServiceBusSuffix string `json:"serviceBusSuffix,omitempty" tf:"service_bus_suffix,omitempty"`
}

type AppServiceHybridConnectionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *AppServiceHybridConnectionSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	TerraFormState string `json:"terraformState,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AppServiceHybridConnectionList is a list of AppServiceHybridConnections
type AppServiceHybridConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AppServiceHybridConnection CRD objects
	Items []AppServiceHybridConnection `json:"items,omitempty"`
}
