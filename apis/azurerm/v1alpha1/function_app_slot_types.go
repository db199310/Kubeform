/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`
// +kubebuilder:storageversion

type FunctionAppSlot struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FunctionAppSlotSpec   `json:"spec,omitempty"`
	Status            FunctionAppSlotStatus `json:"status,omitempty"`
}

type FunctionAppSlotSpecAuthSettingsActiveDirectory struct {
	// +optional
	AllowedAudiences []string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`
	ClientID         string   `json:"clientID" tf:"client_id"`
	// +optional
	ClientSecret string `json:"-" sensitive:"true" tf:"client_secret,omitempty"`
}

type FunctionAppSlotSpecAuthSettingsFacebook struct {
	AppID     string `json:"appID" tf:"app_id"`
	AppSecret string `json:"-" sensitive:"true" tf:"app_secret"`
	// +optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type FunctionAppSlotSpecAuthSettingsGoogle struct {
	ClientID     string `json:"clientID" tf:"client_id"`
	ClientSecret string `json:"-" sensitive:"true" tf:"client_secret"`
	// +optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type FunctionAppSlotSpecAuthSettingsMicrosoft struct {
	ClientID     string `json:"clientID" tf:"client_id"`
	ClientSecret string `json:"-" sensitive:"true" tf:"client_secret"`
	// +optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type FunctionAppSlotSpecAuthSettingsTwitter struct {
	ConsumerKey    string `json:"consumerKey" tf:"consumer_key"`
	ConsumerSecret string `json:"-" sensitive:"true" tf:"consumer_secret"`
}

type FunctionAppSlotSpecAuthSettings struct {
	// +optional
	// +kubebuilder:validation:MaxItems=1
	ActiveDirectory []FunctionAppSlotSpecAuthSettingsActiveDirectory `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`
	// +optional
	AdditionalLoginParams map[string]string `json:"additionalLoginParams,omitempty" tf:"additional_login_params,omitempty"`
	// +optional
	AllowedExternalRedirectUrls []string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`
	// +optional
	DefaultProvider string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`
	Enabled         bool   `json:"enabled" tf:"enabled"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Facebook []FunctionAppSlotSpecAuthSettingsFacebook `json:"facebook,omitempty" tf:"facebook,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Google []FunctionAppSlotSpecAuthSettingsGoogle `json:"google,omitempty" tf:"google,omitempty"`
	// +optional
	Issuer string `json:"issuer,omitempty" tf:"issuer,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Microsoft []FunctionAppSlotSpecAuthSettingsMicrosoft `json:"microsoft,omitempty" tf:"microsoft,omitempty"`
	// +optional
	RuntimeVersion string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`
	// +optional
	TokenRefreshExtensionHours float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`
	// +optional
	TokenStoreEnabled bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Twitter []FunctionAppSlotSpecAuthSettingsTwitter `json:"twitter,omitempty" tf:"twitter,omitempty"`
	// +optional
	UnauthenticatedClientAction string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type FunctionAppSlotSpecConnectionString struct {
	Name  string `json:"name" tf:"name"`
	Type  string `json:"type" tf:"type"`
	Value string `json:"-" sensitive:"true" tf:"value"`
}

type FunctionAppSlotSpecIdentity struct {
	// +optional
	// +kubebuilder:validation:MinItems=1
	IdentityIDS []string `json:"identityIDS,omitempty" tf:"identity_ids,omitempty"`
	// +optional
	PrincipalID string `json:"principalID,omitempty" tf:"principal_id,omitempty"`
	// +optional
	TenantID string `json:"tenantID,omitempty" tf:"tenant_id,omitempty"`
	Type     string `json:"type" tf:"type"`
}

type FunctionAppSlotSpecSiteConfigCors struct {
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`
	// +optional
	SupportCredentials bool `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type FunctionAppSlotSpecSiteConfigIpRestriction struct {
	// +optional
	IpAddress string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
	// +optional
	SubnetID string `json:"subnetID,omitempty" tf:"subnet_id,omitempty"`
}

type FunctionAppSlotSpecSiteConfig struct {
	// +optional
	AlwaysOn bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Cors []FunctionAppSlotSpecSiteConfigCors `json:"cors,omitempty" tf:"cors,omitempty"`
	// +optional
	FtpsState string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`
	// +optional
	Http2Enabled bool `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`
	// +optional
	IpRestriction []FunctionAppSlotSpecSiteConfigIpRestriction `json:"ipRestriction,omitempty" tf:"ip_restriction,omitempty"`
	// +optional
	LinuxFxVersion string `json:"linuxFxVersion,omitempty" tf:"linux_fx_version,omitempty"`
	// +optional
	MinTLSVersion string `json:"minTLSVersion,omitempty" tf:"min_tls_version,omitempty"`
	// +optional
	PreWarmedInstanceCount int64 `json:"preWarmedInstanceCount,omitempty" tf:"pre_warmed_instance_count,omitempty"`
	// +optional
	Use32BitWorkerProcess bool `json:"use32BitWorkerProcess,omitempty" tf:"use_32_bit_worker_process,omitempty"`
	// +optional
	WebsocketsEnabled bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`
}

type FunctionAppSlotSpecSiteCredential struct {
	// +optional
	Password string `json:"-" sensitive:"true" tf:"password,omitempty"`
	// +optional
	Username string `json:"username,omitempty" tf:"username,omitempty"`
}

type FunctionAppSlotSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	AppServicePlanID string `json:"appServicePlanID" tf:"app_service_plan_id"`
	// +optional
	AppSettings map[string]string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	AuthSettings []FunctionAppSlotSpecAuthSettings `json:"authSettings,omitempty" tf:"auth_settings,omitempty"`
	// +optional
	ClientAffinityEnabled bool `json:"clientAffinityEnabled,omitempty" tf:"client_affinity_enabled,omitempty"`
	// +optional
	ConnectionString []FunctionAppSlotSpecConnectionString `json:"connectionString,omitempty" tf:"connection_string,omitempty"`
	// +optional
	DailyMemoryTimeQuota int64 `json:"dailyMemoryTimeQuota,omitempty" tf:"daily_memory_time_quota,omitempty"`
	// +optional
	DefaultHostname string `json:"defaultHostname,omitempty" tf:"default_hostname,omitempty"`
	// +optional
	EnableBuiltinLogging bool `json:"enableBuiltinLogging,omitempty" tf:"enable_builtin_logging,omitempty"`
	// +optional
	Enabled         bool   `json:"enabled,omitempty" tf:"enabled,omitempty"`
	FunctionAppName string `json:"functionAppName" tf:"function_app_name"`
	// +optional
	HttpsOnly bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Identity []FunctionAppSlotSpecIdentity `json:"identity,omitempty" tf:"identity,omitempty"`
	// +optional
	Kind     string `json:"kind,omitempty" tf:"kind,omitempty"`
	Location string `json:"location" tf:"location"`
	Name     string `json:"name" tf:"name"`
	// +optional
	OsType string `json:"osType,omitempty" tf:"os_type,omitempty"`
	// +optional
	OutboundIPAddresses string `json:"outboundIPAddresses,omitempty" tf:"outbound_ip_addresses,omitempty"`
	// +optional
	PossibleOutboundIPAddresses string `json:"possibleOutboundIPAddresses,omitempty" tf:"possible_outbound_ip_addresses,omitempty"`
	ResourceGroupName           string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	SiteConfig []FunctionAppSlotSpecSiteConfig `json:"siteConfig,omitempty" tf:"site_config,omitempty"`
	// +optional
	SiteCredential          []FunctionAppSlotSpecSiteCredential `json:"siteCredential,omitempty" tf:"site_credential,omitempty"`
	StorageAccountAccessKey string                              `json:"-" sensitive:"true" tf:"storage_account_access_key"`
	StorageAccountName      string                              `json:"storageAccountName" tf:"storage_account_name"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
	// +optional
	Version string `json:"version,omitempty" tf:"version,omitempty"`
}

type FunctionAppSlotStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *FunctionAppSlotSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FunctionAppSlotList is a list of FunctionAppSlots
type FunctionAppSlotList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FunctionAppSlot CRD objects
	Items []FunctionAppSlot `json:"items,omitempty"`
}
