/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BotChannelDirectline struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BotChannelDirectlineSpec   `json:"spec,omitempty"`
	Status            BotChannelDirectlineStatus `json:"status,omitempty"`
}

type BotChannelDirectlineSpecSite struct {
	// +optional
	Enabled bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
	// +optional
	EnhancedAuthenticationEnabled bool `json:"enhancedAuthenticationEnabled,omitempty" tf:"enhanced_authentication_enabled,omitempty"`
	// +optional
	ID string `json:"ID,omitempty" tf:"id,omitempty"`
	// +optional
	Key string `json:"-" sensitive:"true" tf:"key,omitempty"`
	// +optional
	Key2 string `json:"-" sensitive:"true" tf:"key2,omitempty"`
	Name string `json:"name" tf:"name"`
	// +optional
	TrustedOrigins []string `json:"trustedOrigins,omitempty" tf:"trusted_origins,omitempty"`
	// +optional
	V1Allowed bool `json:"v1Allowed,omitempty" tf:"v1_allowed,omitempty"`
	// +optional
	V3Allowed bool `json:"v3Allowed,omitempty" tf:"v3_allowed,omitempty"`
}

type BotChannelDirectlineSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BotName           string                         `json:"botName" tf:"bot_name"`
	Location          string                         `json:"location" tf:"location"`
	ResourceGroupName string                         `json:"resourceGroupName" tf:"resource_group_name"`
	Site              []BotChannelDirectlineSpecSite `json:"site" tf:"site"`
}

type BotChannelDirectlineStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *BotChannelDirectlineSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	TerraFormLogs *base.TerraFormLogs `json:"terraformLogs,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BotChannelDirectlineList is a list of BotChannelDirectlines
type BotChannelDirectlineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BotChannelDirectline CRD objects
	Items []BotChannelDirectline `json:"items,omitempty"`
}
