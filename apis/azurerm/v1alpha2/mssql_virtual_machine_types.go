/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha2

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha2"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MssqlVirtualMachine struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MssqlVirtualMachineSpec   `json:"spec,omitempty"`
	Status            MssqlVirtualMachineStatus `json:"status,omitempty"`
}

type MssqlVirtualMachineSpecAutoPatching struct {
	DayOfWeek                          string `json:"dayOfWeek" tf:"day_of_week"`
	MaintenanceWindowDurationInMinutes int64  `json:"maintenanceWindowDurationInMinutes" tf:"maintenance_window_duration_in_minutes"`
	MaintenanceWindowStartingHour      int64  `json:"maintenanceWindowStartingHour" tf:"maintenance_window_starting_hour"`
}

type MssqlVirtualMachineSpecKeyVaultCredential struct {
	KeyVaultURL            string `json:"-" sensitive:"true" tf:"key_vault_url"`
	Name                   string `json:"name" tf:"name"`
	ServicePrincipalName   string `json:"-" sensitive:"true" tf:"service_principal_name"`
	ServicePrincipalSecret string `json:"-" sensitive:"true" tf:"service_principal_secret"`
}

type MssqlVirtualMachineSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	// +kubebuilder:validation:MaxItems=1
	AutoPatching []MssqlVirtualMachineSpecAutoPatching `json:"autoPatching,omitempty" tf:"auto_patching,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	KeyVaultCredential []MssqlVirtualMachineSpecKeyVaultCredential `json:"keyVaultCredential,omitempty" tf:"key_vault_credential,omitempty"`
	// +optional
	RServicesEnabled bool `json:"rServicesEnabled,omitempty" tf:"r_services_enabled,omitempty"`
	// +optional
	SqlConnectivityPort int64 `json:"sqlConnectivityPort,omitempty" tf:"sql_connectivity_port,omitempty"`
	// +optional
	SqlConnectivityType string `json:"sqlConnectivityType,omitempty" tf:"sql_connectivity_type,omitempty"`
	// +optional
	SqlConnectivityUpdatePassword string `json:"-" sensitive:"true" tf:"sql_connectivity_update_password,omitempty"`
	// +optional
	SqlConnectivityUpdateUsername string `json:"-" sensitive:"true" tf:"sql_connectivity_update_username,omitempty"`
	SqlLicenseType                string `json:"sqlLicenseType" tf:"sql_license_type"`
	// +optional
	Tags             map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
	VirtualMachineID string            `json:"virtualMachineID" tf:"virtual_machine_id"`
}

type MssqlVirtualMachineStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *MssqlVirtualMachineSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MssqlVirtualMachineList is a list of MssqlVirtualMachines
type MssqlVirtualMachineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MssqlVirtualMachine CRD objects
	Items []MssqlVirtualMachine `json:"items,omitempty"`
}
