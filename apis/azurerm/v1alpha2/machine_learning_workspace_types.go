/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MachineLearningWorkspace struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MachineLearningWorkspaceSpec   `json:"spec,omitempty"`
	Status            MachineLearningWorkspaceStatus `json:"status,omitempty"`
}

type MachineLearningWorkspaceSpecIdentity struct {
	// +optional
	PrincipalID string `json:"principalID,omitempty" tf:"principal_id,omitempty"`
	// +optional
	TenantID string `json:"tenantID,omitempty" tf:"tenant_id,omitempty"`
	Type     string `json:"type" tf:"type"`
}

type MachineLearningWorkspaceSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ApplicationInsightsID string `json:"applicationInsightsID" tf:"application_insights_id"`
	// +optional
	ContainerRegistryID string `json:"containerRegistryID,omitempty" tf:"container_registry_id,omitempty"`
	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty"`
	// +optional
	FriendlyName string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`
	// +kubebuilder:validation:MaxItems=1
	Identity          []MachineLearningWorkspaceSpecIdentity `json:"identity" tf:"identity"`
	KeyVaultID        string                                 `json:"keyVaultID" tf:"key_vault_id"`
	Location          string                                 `json:"location" tf:"location"`
	Name              string                                 `json:"name" tf:"name"`
	ResourceGroupName string                                 `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	SkuName          string `json:"skuName,omitempty" tf:"sku_name,omitempty"`
	StorageAccountID string `json:"storageAccountID" tf:"storage_account_id"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type MachineLearningWorkspaceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *MachineLearningWorkspaceSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MachineLearningWorkspaceList is a list of MachineLearningWorkspaces
type MachineLearningWorkspaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MachineLearningWorkspace CRD objects
	Items []MachineLearningWorkspace `json:"items,omitempty"`
}
