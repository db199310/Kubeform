/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"

	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SDPAzSqlv1 struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SDPAzSqlv1Spec   `json:"spec,omitempty"`
	Status            SDPAzSqlv1Status `json:"status,omitempty"`
}

type SDPAzSqlv1Spec struct {
	// +optional
	SecretRef   *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
	ProviderRef core.LocalObjectReference  `json:"providerRef" tf:"-"`
	// +optional
	Source string `json:"source" tf:"source"`

	// +optional
	// Additional set of tags
	AdditionalTags map[string]string `json:"additionalTags,omitempty" tf:"additional_tags,omitempty"`
	// +optional
	// If set to true, enable Failover Group
	EnableHA *bool `json:"enableHA,omitempty" tf:"enable_HA,omitempty"`
	// Environment. Upto 5 character. For e.g. dev, dev01 , prd01
	Environment string `json:"environment" tf:"environment"`
	// +optional
	// existing resource group name
	ExistingResourceGroup string `json:"existingResourceGroup,omitempty" tf:"existing_resource_group,omitempty"`
	// +optional
	// Instance number
	Instance string `json:"instance,omitempty" tf:"instance,omitempty"`
	// +optional
	// Azure Keyvault name to store SQL password
	KvName string `json:"kvName,omitempty" tf:"kv_name,omitempty"`
	// +optional
	// Azure Keyvault resource group name for SQL password
	KvResourceGroupName string `json:"kvResourceGroupName,omitempty" tf:"kv_resource_group_name,omitempty"`
	// Name suffix used for SQL server name and resource group
	NameSuffix string `json:"nameSuffix" tf:"nameSuffix"`
	// owner
	Owner string `json:"owner" tf:"owner"`
	// +optional
	// placement
	Placement string `json:"placement,omitempty" tf:"placement,omitempty"`
	// +optional
	// project stream name
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	//  4 character project stream name/code
	ProjectStream string `json:"projectStream" tf:"projectStream"`
	// region. Choose from australia, europe, asia, europe
	Region string `json:"region" tf:"region"`
	// +optional
	// releaseVersion
	ReleaseVersion string `json:"releaseVersion,omitempty" tf:"releaseVersion,omitempty"`
	// SQL Server username
	SqlAdminUsername string `json:"sqlAdminUsername" tf:"sql_admin_username"`
	// +optional
	// Edition of the SQL DB
	SqlDbEdition string `json:"sqlDbEdition,omitempty" tf:"sql_db_edition,omitempty"`
	// Name of the SQL DB
	SqlDbName string `json:"sqlDbName" tf:"sql_db_name"`
	// +optional
	// Requested Service Objective Name of the SQL DB
	SqlDbRequestedServiceObjectiveName string `json:"sqlDbRequestedServiceObjectiveName,omitempty" tf:"sql_db_requested_service_objective_name,omitempty"`
	// +optional
	/*
	   Map of SQL Firewall Rules in the following format:

	     "Name" = ["StartIP", "EndIP"]

	*/
	SqlFwRules map[string]json.RawMessage `json:"sqlFwRules,omitempty" tf:"sql_fw_rules,omitempty"`
	// +optional
	// Version of Azure SQL Server
	SqlVersion string `json:"sqlVersion,omitempty" tf:"sql_version,omitempty"`
	//  4 character project stream name/code
	WorkStream string `json:"workStream" tf:"workStream"`
}

type SDPAzSqlv1Output struct{}

type SDPAzSqlv1Status struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *SDPAzSqlv1Output `json:"output,omitempty"`
	// +optional
	State string `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SDPAzSqlv1List is a list of SDPAzSqlv1s
type SDPAzSqlv1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SDPAzSqlv1 CRD objects
	Items []SDPAzSqlv1 `json:"items,omitempty"`
}
