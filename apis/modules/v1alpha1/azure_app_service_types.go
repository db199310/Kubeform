/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"

	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AzureAppService struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AzureAppServiceSpec   `json:"spec,omitempty"`
	Status            AzureAppServiceStatus `json:"status,omitempty"`
}

type AzureAppServiceSpec struct {
	// +optional
	SecretRef   *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
	ProviderRef core.LocalObjectReference  `json:"providerRef" tf:"-"`
	// +optional
	Source string `json:"source" tf:"source"`

	// +optional
	//
	ActiveDirectory map[string]AzureAppServiceActiveDirectory `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`
	// +optional
	// The App Services with their properties.
	AppService []AzureAppServiceAppService `json:"appService,omitempty" tf:"app_service,omitempty"`
	// +optional
	// Additional tags for the App Service resources, in addition to the resource group tags.
	AppServiceAdditionalTags map[string]string `json:"appServiceAdditionalTags,omitempty" tf:"app_service_additional_tags,omitempty"`
	// +optional
	// App Service resources location if different that the resource group's location.
	AppServiceLocation string `json:"appServiceLocation,omitempty" tf:"app_service_location,omitempty"`
	// +optional
	// The App Services plans with their properties.
	AppServicePlan map[string]AzureAppServiceAppServicePlan `json:"appServicePlan,omitempty" tf:"app_service_plan,omitempty"`
	// +optional
	// App Service resourcess name prefix.
	AppServicePrefix string `json:"appServicePrefix,omitempty" tf:"app_service_prefix,omitempty"`
	// +optional
	// The App Service resources group name.
	AppServiceRg string `json:"appServiceRg,omitempty" tf:"app_service_rg,omitempty"`
	// +optional
	//
	AppSettings map[string]string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`
	// +optional
	//
	AppservicePlanKey string `json:"appservicePlanKey,omitempty" tf:"appservice_plan_key,omitempty"`
	// +optional
	//
	ConnectionStrings map[string]AzureAppServiceConnectionStrings `json:"connectionStrings,omitempty" tf:"connection_strings,omitempty"`
	// +optional
	// Environment
	Environment string `json:"environment,omitempty" tf:"environment,omitempty"`
	// +optional
	// Existing App Services plans.
	ExistingAppServicePlan map[string]AzureAppServiceExistingAppServicePlan `json:"existingAppServicePlan,omitempty" tf:"existing_app_service_plan,omitempty"`
	// +optional
	//
	Identity map[string]AzureAppServiceIdentity `json:"identity,omitempty" tf:"identity,omitempty"`
	// +optional
	//
	NullArray json.RawMessage `json:"nullArray,omitempty" tf:"null_array,omitempty"`
	// +optional
	// owner
	Owner string `json:"owner,omitempty" tf:"owner,omitempty"`
	// +optional
	// placement
	Placement string `json:"placement,omitempty" tf:"placement,omitempty"`
	// +optional
	// project stream name
	ProjectStream string `json:"projectStream,omitempty" tf:"projectStream,omitempty"`
	// +optional
	// region
	Region string `json:"region,omitempty" tf:"region,omitempty"`
	// +optional
	// releaseVersion
	ReleaseVersion json.RawMessage `json:"releaseVersion,omitempty" tf:"releaseVersion,omitempty"`
	// +optional
	//
	SiteConfig []AzureAppServiceSiteConfig `json:"siteConfig,omitempty" tf:"site_config,omitempty"`
	// +optional
	//
	SiteConfigCors []AzureAppServiceSiteConfigCors `json:"siteConfigCors,omitempty" tf:"site_config_cors,omitempty"`
	// +optional
	//
	SiteConfigIPRestrictions map[string]AzureAppServiceSiteConfigIPRestrictions `json:"siteConfigIPRestrictions,omitempty" tf:"site_config_ip_restrictions,omitempty"`
	// +optional
	//
	StorageAccounts map[string]AzureAppServiceStorageAccounts `json:"storageAccounts,omitempty" tf:"storage_accounts,omitempty"`
	// +optional
	//
	SubnetID string `json:"subnetID,omitempty" tf:"subnet_id,omitempty"`
}

type AzureAppServiceSiteConfig struct {
	// +optional
	//
	AlwaysOn bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`
	// +optional
	//
	AppCommandLine string `json:"appCommandLine,omitempty" tf:"app_command_line,omitempty"`
	// +optional
	//
	DefaultDocuments []string `json:"defaultDocuments,omitempty" tf:"default_documents,omitempty"`
	// +optional
	//
	DotnetFrameworkVersion string `json:"dotnetFrameworkVersion,omitempty" tf:"dotnet_framework_version,omitempty"`
	// +optional
	//
	FtpsState string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`
	// +optional
	//
	Http2Enabled string `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`
	// +optional
	//
	JavaContainer string `json:"javaContainer,omitempty" tf:"java_container,omitempty"`
	// +optional
	//
	JavaContainerVersion string `json:"javaContainerVersion,omitempty" tf:"java_container_version,omitempty"`
	// +optional
	//
	JavaVersion string `json:"javaVersion,omitempty" tf:"java_version,omitempty"`
	// +optional
	//
	LinuxFxVersion string `json:"linuxFxVersion,omitempty" tf:"linux_fx_version,omitempty"`
	// +optional
	//
	ManagedPipelineMode string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode,omitempty"`
	// +optional
	//
	MinTLSVersion string `json:"minTLSVersion,omitempty" tf:"min_tls_version,omitempty"`
	// +optional
	//
	PhpVersion string `json:"phpVersion,omitempty" tf:"php_version,omitempty"`
	// +optional
	//
	PythonVersion string `json:"pythonVersion,omitempty" tf:"python_version,omitempty"`
	// +optional
	//
	RemoteDebuggingEnabled bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled,omitempty"`
	// +optional
	//
	RemoteDebuggingVersion string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version,omitempty"`
	// +optional
	//
	ScmType string `json:"scmType,omitempty" tf:"scm_type,omitempty"`
	// +optional
	//
	Use32BitWorkerProcess bool `json:"use32BitWorkerProcess,omitempty" tf:"use_32_bit_worker_process,omitempty"`
	// +optional
	//
	WebsocketsEnabled bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`
	// +optional
	//
	WindowsFxVersion string `json:"windowsFxVersion,omitempty" tf:"windows_fx_version,omitempty"`
}

type AzureAppServiceSiteConfigIPRestrictions struct {
	// +optional
	//
	IpAddress string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
	// +optional
	//
	VirtualNetworkSubnetIDS string `json:"virtualNetworkSubnetIDS,omitempty" tf:"virtual_network_subnet_ids,omitempty"`
}

type AzureAppServiceStorageAccounts struct {
	// +optional
	//
	AccessKey string `json:"accessKey,omitempty" tf:"access_key,omitempty"`
	// +optional
	//
	AccountName string `json:"accountName,omitempty" tf:"account_name,omitempty"`
	// +optional
	//
	MountPath string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`
	// +optional
	//
	Name string `json:"name,omitempty" tf:"name,omitempty"`
	// +optional
	//
	ShareName string `json:"shareName,omitempty" tf:"share_name,omitempty"`
	// +optional
	//
	Type string `json:"type,omitempty" tf:"type,omitempty"`
}

type AzureAppServiceActiveDirectory struct {
	// +optional
	//
	ClientID string `json:"clientID,omitempty" tf:"client_id,omitempty"`
	// +optional
	//
	ClientSecret string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`
}

type AzureAppServiceAppService struct {
	// +optional
	//
	AdditionalLoginParams map[string]string `json:"additionalLoginParams,omitempty" tf:"additional_login_params,omitempty"`
	// +optional
	//
	AllowedExternalRedirectUrls []string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`
	// +optional
	//
	ClientAffinityEnabled bool `json:"clientAffinityEnabled,omitempty" tf:"client_affinity_enabled,omitempty"`
	// +optional
	//
	ClientCertEnabled bool `json:"clientCertEnabled,omitempty" tf:"client_cert_enabled,omitempty"`
	// +optional
	//
	DefaultProvider string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`
	// +optional
	//
	Enabled bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
	// +optional
	//
	HttpsOnly bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`
	// +optional
	//
	ID string `json:"ID,omitempty" tf:"id,omitempty"`
	// +optional
	//
	Issuer string `json:"issuer,omitempty" tf:"issuer,omitempty"`
	// +optional
	//
	RuntimeVersion string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`
	// +optional
	//
	TokenRefreshExtensionHours string `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`
	// +optional
	//
	TokenStoreEnabled bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`
	// +optional
	//
	UnauthenticatedClientAction string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type AzureAppServiceAppServicePlan struct {
	// +optional
	//
	ID string `json:"ID,omitempty" tf:"id,omitempty"`
	// +optional
	//
	Kind string `json:"kind,omitempty" tf:"kind,omitempty"`
	// +optional
	//
	MaximumElasticWorkerCount json.Number `json:"maximumElasticWorkerCount,omitempty" tf:"maximum_elastic_worker_count,omitempty"`
	// +optional
	//
	PerSiteScaling bool `json:"perSiteScaling,omitempty" tf:"per_site_scaling,omitempty"`
	// +optional
	//
	Prefix string `json:"prefix,omitempty" tf:"prefix,omitempty"`
	// +optional
	//
	Reserved bool `json:"reserved,omitempty" tf:"reserved,omitempty"`
	// +optional
	//
	SkuCapacity json.Number `json:"skuCapacity,omitempty" tf:"sku_capacity,omitempty"`
	// +optional
	//
	SkuSize string `json:"skuSize,omitempty" tf:"sku_size,omitempty"`
	// +optional
	//
	SkuTier string `json:"skuTier,omitempty" tf:"sku_tier,omitempty"`
}

type AzureAppServiceConnectionStrings struct {
	// +optional
	//
	Name string `json:"name,omitempty" tf:"name,omitempty"`
	// +optional
	//
	Type string `json:"type,omitempty" tf:"type,omitempty"`
	// +optional
	//
	Value string `json:"value,omitempty" tf:"value,omitempty"`
}

type AzureAppServiceIdentity struct {
	// +optional
	//
	IdentityIDS string `json:"identityIDS,omitempty" tf:"identity_ids,omitempty"`
	// +optional
	//
	Type string `json:"type,omitempty" tf:"type,omitempty"`
}

type AzureAppServiceExistingAppServicePlan struct {
	// +optional
	//
	Name string `json:"name,omitempty" tf:"name,omitempty"`
	// +optional
	//
	ResourceGroupName string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`
}

type AzureAppServiceSiteConfigCors struct {
	// +optional
	//
	AllowedOrigins []string `json:"allowedOrigins,omitempty" tf:"allowed_origins,omitempty"`
	// +optional
	//
	SupportCredentials string `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type AzureAppServiceOutput struct {
	// Map output of the App Service Plans
	// +optional
	AppServicePlans string `json:"appServicePlans" tf:"app_service_plans"`
	// Map output of the App Services
	// +optional
	AppServices string `json:"appServices" tf:"app_services"`
}

type AzureAppServiceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *AzureAppServiceOutput `json:"output,omitempty"`
	// +optional
	State string `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AzureAppServiceList is a list of AzureAppServices
type AzureAppServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AzureAppService CRD objects
	Items []AzureAppService `json:"items,omitempty"`
}
