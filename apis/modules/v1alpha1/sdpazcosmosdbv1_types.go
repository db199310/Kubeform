/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"

	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SDPAzcosmosdbv1 struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SDPAzcosmosdbv1Spec   `json:"spec,omitempty"`
	Status            SDPAzcosmosdbv1Status `json:"status,omitempty"`
}

type SDPAzcosmosdbv1Spec struct {
	// +optional
	SecretRef   *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
	ProviderRef core.LocalObjectReference  `json:"providerRef" tf:"-"`
	// +optional
	Source string `json:"source" tf:"source"`

	// +optional
	// Additional set of tags
	AdditionalTags map[string]string `json:"additionalTags,omitempty" tf:"additional_tags,omitempty"`
	// +optional
	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account.
	AllowedCidrs []string `json:"allowedCidrs,omitempty" tf:"allowed_cidrs,omitempty"`
	// +optional
	/*
	   Configures the capabilities to enable for this Cosmos DB account:
	   Possible values are
	     AllowSelfServeUpgradeToMongo36, DisableRateLimitingResponses,
	     EnableAggregationPipeline, EnableCassandra, EnableGremlin,EnableMongo, EnableTable, EnableServerless,
	     MongoDBv3.4 and mongoEnableDocLevelTTL.
	*/
	Capabilities []string `json:"capabilities,omitempty" tf:"capabilities,omitempty"`
	// +optional
	// Consistency policy level. Allowed values are `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`
	ConsistencyPolicyLevel string `json:"consistencyPolicyLevel,omitempty" tf:"consistency_policy_level,omitempty"`
	// +optional
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.
	ConsistencyPolicyMaxIntervalInSeconds json.Number `json:"consistencyPolicyMaxIntervalInSeconds,omitempty" tf:"consistency_policy_max_interval_in_seconds,omitempty"`
	// +optional
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 10 â€“ 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.
	ConsistencyPolicyMaxStalenessPrefix json.Number `json:"consistencyPolicyMaxStalenessPrefix,omitempty" tf:"consistency_policy_max_staleness_prefix,omitempty"`
	// This is the name of the database to be created.
	DatabaseName string `json:"databaseName" tf:"database_name"`
	// +optional
	// This is the throughput to be set at the database level. Optional. Throughput can be set at the database level, or at the object level inside the database.
	DatabaseThroughput json.Number `json:"databaseThroughput,omitempty" tf:"database_throughput,omitempty"`
	// Environment. Upto 5 character. For e.g. dev, dev01 , prd01
	Environment string `json:"environment" tf:"environment"`
	// +optional
	// existing resource group name
	ExistingResourceGroup string `json:"existingResourceGroup,omitempty" tf:"existing_resource_group,omitempty"`
	// +optional
	// Instance number
	Instance string `json:"instance,omitempty" tf:"instance,omitempty"`
	// +optional
	// Enables virtual network filtering for this Cosmos DB account
	IsVirtualNetworkFilterEnabled *bool `json:"isVirtualNetworkFilterEnabled,omitempty" tf:"is_virtual_network_filter_enabled,omitempty"`
	// +optional
	// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`.
	Kind string `json:"kind,omitempty" tf:"kind,omitempty"`
	// +optional
	// Azure Keyvault name to store Cosmos information
	KvName string `json:"kvName,omitempty" tf:"kv_name,omitempty"`
	// +optional
	// Azure Keyvault resource group name for Cosmos information
	KvResourceGroupName string `json:"kvResourceGroupName,omitempty" tf:"kv_resource_group_name,omitempty"`
	// +optional
	// The name of the Azure region to host replicated data and their priority.
	Locations map[string]json.RawMessage `json:"locations,omitempty" tf:"locations,omitempty"`
	// +optional
	// Name suffix used for Cosmos account name and resource group
	NameSuffix string `json:"nameSuffix,omitempty" tf:"nameSuffix,omitempty"`
	// +optional
	// Optional prefix for PostgreSQL server name
	NamePrefix string `json:"namePrefix,omitempty" tf:"name_prefix,omitempty"`
	// +optional
	// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to Standard.
	OfferType string `json:"offerType,omitempty" tf:"offer_type,omitempty"`
	// owner
	Owner string `json:"owner" tf:"owner"`
	// +optional
	// placement
	Placement string `json:"placement,omitempty" tf:"placement,omitempty"`
	// +optional
	// project stream name
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	//  4 character project stream name/code
	ProjectStream string `json:"projectStream" tf:"projectStream"`
	// region. Choose from australia, europe, asia, europe
	Region string `json:"region" tf:"region"`
	// +optional
	// releaseVersion
	ReleaseVersion string `json:"releaseVersion,omitempty" tf:"releaseVersion,omitempty"`
	// +optional
	// Specifues a virtual_network_rules resource used to define which subnets are allowed to access this CosmosDB account
	VirtualNetworkRule []SDPAzcosmosdbv1VirtualNetworkRule `json:"virtualNetworkRule,omitempty" tf:"virtual_network_rule,omitempty"`
	//  4 character project stream name/code
	WorkStream string `json:"workStream" tf:"workStream"`
}

type SDPAzcosmosdbv1VirtualNetworkRule struct {
	// +optional
	// +optional
	IgnoreMissingVnetServiceEndpoint *bool `json:"ignoreMissingVnetServiceEndpoint,omitempty" tf:"ignore_missing_vnet_service_endpoint,omitempty"`
}

type SDPAzcosmosdbv1Output struct {
	// The endpoint used to connect to the CosmosDB account.
	// +optional
	CosmosdbEndpoint string `json:"cosmosdbEndpoint" tf:"cosmosdb_endpoint"`
	// The CosmosDB Account ID.
	// +optional
	CosmosdbID string `json:"cosmosdbID" tf:"cosmosdb_id"`
	// The CosmosDB Account Name.
	// +optional
	CosmosdbName string `json:"cosmosdbName" tf:"cosmosdb_name"`
	// A list of read endpoints available for this CosmosDB account.
	// +optional
	CosmosdbReadEndpoints string `json:"cosmosdbReadEndpoints" tf:"cosmosdb_read_endpoints"`
	// A list of write endpoints available for this CosmosDB account.
	// +optional
	CosmosdbWriteEndpoints string `json:"cosmosdbWriteEndpoints" tf:"cosmosdb_write_endpoints"`
}

type SDPAzcosmosdbv1Status struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *SDPAzcosmosdbv1Output `json:"output,omitempty"`
	// +optional
	State string `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	TerraformErrors []string `json:"terraformErrors,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SDPAzcosmosdbv1List is a list of SDPAzcosmosdbv1s
type SDPAzcosmosdbv1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SDPAzcosmosdbv1 CRD objects
	Items []SDPAzcosmosdbv1 `json:"items,omitempty"`
}
