/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// NetworkInterfaceSecurityGroupAssociationLister helps list NetworkInterfaceSecurityGroupAssociations.
type NetworkInterfaceSecurityGroupAssociationLister interface {
	// List lists all NetworkInterfaceSecurityGroupAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSecurityGroupAssociation, err error)
	// NetworkInterfaceSecurityGroupAssociations returns an object that can list and get NetworkInterfaceSecurityGroupAssociations.
	NetworkInterfaceSecurityGroupAssociations(namespace string) NetworkInterfaceSecurityGroupAssociationNamespaceLister
	NetworkInterfaceSecurityGroupAssociationListerExpansion
}

// networkInterfaceSecurityGroupAssociationLister implements the NetworkInterfaceSecurityGroupAssociationLister interface.
type networkInterfaceSecurityGroupAssociationLister struct {
	indexer cache.Indexer
}

// NewNetworkInterfaceSecurityGroupAssociationLister returns a new NetworkInterfaceSecurityGroupAssociationLister.
func NewNetworkInterfaceSecurityGroupAssociationLister(indexer cache.Indexer) NetworkInterfaceSecurityGroupAssociationLister {
	return &networkInterfaceSecurityGroupAssociationLister{indexer: indexer}
}

// List lists all NetworkInterfaceSecurityGroupAssociations in the indexer.
func (s *networkInterfaceSecurityGroupAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSecurityGroupAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInterfaceSecurityGroupAssociation))
	})
	return ret, err
}

// NetworkInterfaceSecurityGroupAssociations returns an object that can list and get NetworkInterfaceSecurityGroupAssociations.
func (s *networkInterfaceSecurityGroupAssociationLister) NetworkInterfaceSecurityGroupAssociations(namespace string) NetworkInterfaceSecurityGroupAssociationNamespaceLister {
	return networkInterfaceSecurityGroupAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkInterfaceSecurityGroupAssociationNamespaceLister helps list and get NetworkInterfaceSecurityGroupAssociations.
type NetworkInterfaceSecurityGroupAssociationNamespaceLister interface {
	// List lists all NetworkInterfaceSecurityGroupAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSecurityGroupAssociation, err error)
	// Get retrieves the NetworkInterfaceSecurityGroupAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NetworkInterfaceSecurityGroupAssociation, error)
	NetworkInterfaceSecurityGroupAssociationNamespaceListerExpansion
}

// networkInterfaceSecurityGroupAssociationNamespaceLister implements the NetworkInterfaceSecurityGroupAssociationNamespaceLister
// interface.
type networkInterfaceSecurityGroupAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkInterfaceSecurityGroupAssociations in the indexer for a given namespace.
func (s networkInterfaceSecurityGroupAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSecurityGroupAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInterfaceSecurityGroupAssociation))
	})
	return ret, err
}

// Get retrieves the NetworkInterfaceSecurityGroupAssociation from the indexer for a given namespace and name.
func (s networkInterfaceSecurityGroupAssociationNamespaceLister) Get(name string) (*v1alpha1.NetworkInterfaceSecurityGroupAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkinterfacesecuritygroupassociation"), name)
	}
	return obj.(*v1alpha1.NetworkInterfaceSecurityGroupAssociation), nil
}
