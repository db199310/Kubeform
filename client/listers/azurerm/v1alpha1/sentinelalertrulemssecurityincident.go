/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// SentinelAlertRuleMsSecurityIncidentLister helps list SentinelAlertRuleMsSecurityIncidents.
type SentinelAlertRuleMsSecurityIncidentLister interface {
	// List lists all SentinelAlertRuleMsSecurityIncidents in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SentinelAlertRuleMsSecurityIncident, err error)
	// SentinelAlertRuleMsSecurityIncidents returns an object that can list and get SentinelAlertRuleMsSecurityIncidents.
	SentinelAlertRuleMsSecurityIncidents(namespace string) SentinelAlertRuleMsSecurityIncidentNamespaceLister
	SentinelAlertRuleMsSecurityIncidentListerExpansion
}

// sentinelAlertRuleMsSecurityIncidentLister implements the SentinelAlertRuleMsSecurityIncidentLister interface.
type sentinelAlertRuleMsSecurityIncidentLister struct {
	indexer cache.Indexer
}

// NewSentinelAlertRuleMsSecurityIncidentLister returns a new SentinelAlertRuleMsSecurityIncidentLister.
func NewSentinelAlertRuleMsSecurityIncidentLister(indexer cache.Indexer) SentinelAlertRuleMsSecurityIncidentLister {
	return &sentinelAlertRuleMsSecurityIncidentLister{indexer: indexer}
}

// List lists all SentinelAlertRuleMsSecurityIncidents in the indexer.
func (s *sentinelAlertRuleMsSecurityIncidentLister) List(selector labels.Selector) (ret []*v1alpha1.SentinelAlertRuleMsSecurityIncident, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SentinelAlertRuleMsSecurityIncident))
	})
	return ret, err
}

// SentinelAlertRuleMsSecurityIncidents returns an object that can list and get SentinelAlertRuleMsSecurityIncidents.
func (s *sentinelAlertRuleMsSecurityIncidentLister) SentinelAlertRuleMsSecurityIncidents(namespace string) SentinelAlertRuleMsSecurityIncidentNamespaceLister {
	return sentinelAlertRuleMsSecurityIncidentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SentinelAlertRuleMsSecurityIncidentNamespaceLister helps list and get SentinelAlertRuleMsSecurityIncidents.
type SentinelAlertRuleMsSecurityIncidentNamespaceLister interface {
	// List lists all SentinelAlertRuleMsSecurityIncidents in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SentinelAlertRuleMsSecurityIncident, err error)
	// Get retrieves the SentinelAlertRuleMsSecurityIncident from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SentinelAlertRuleMsSecurityIncident, error)
	SentinelAlertRuleMsSecurityIncidentNamespaceListerExpansion
}

// sentinelAlertRuleMsSecurityIncidentNamespaceLister implements the SentinelAlertRuleMsSecurityIncidentNamespaceLister
// interface.
type sentinelAlertRuleMsSecurityIncidentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SentinelAlertRuleMsSecurityIncidents in the indexer for a given namespace.
func (s sentinelAlertRuleMsSecurityIncidentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SentinelAlertRuleMsSecurityIncident, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SentinelAlertRuleMsSecurityIncident))
	})
	return ret, err
}

// Get retrieves the SentinelAlertRuleMsSecurityIncident from the indexer for a given namespace and name.
func (s sentinelAlertRuleMsSecurityIncidentNamespaceLister) Get(name string) (*v1alpha1.SentinelAlertRuleMsSecurityIncident, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sentinelalertrulemssecurityincident"), name)
	}
	return obj.(*v1alpha1.SentinelAlertRuleMsSecurityIncident), nil
}
