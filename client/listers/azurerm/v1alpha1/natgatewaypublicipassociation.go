/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// NatGatewayPublicIPAssociationLister helps list NatGatewayPublicIPAssociations.
type NatGatewayPublicIPAssociationLister interface {
	// List lists all NatGatewayPublicIPAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NatGatewayPublicIPAssociation, err error)
	// NatGatewayPublicIPAssociations returns an object that can list and get NatGatewayPublicIPAssociations.
	NatGatewayPublicIPAssociations(namespace string) NatGatewayPublicIPAssociationNamespaceLister
	NatGatewayPublicIPAssociationListerExpansion
}

// natGatewayPublicIPAssociationLister implements the NatGatewayPublicIPAssociationLister interface.
type natGatewayPublicIPAssociationLister struct {
	indexer cache.Indexer
}

// NewNatGatewayPublicIPAssociationLister returns a new NatGatewayPublicIPAssociationLister.
func NewNatGatewayPublicIPAssociationLister(indexer cache.Indexer) NatGatewayPublicIPAssociationLister {
	return &natGatewayPublicIPAssociationLister{indexer: indexer}
}

// List lists all NatGatewayPublicIPAssociations in the indexer.
func (s *natGatewayPublicIPAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.NatGatewayPublicIPAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatGatewayPublicIPAssociation))
	})
	return ret, err
}

// NatGatewayPublicIPAssociations returns an object that can list and get NatGatewayPublicIPAssociations.
func (s *natGatewayPublicIPAssociationLister) NatGatewayPublicIPAssociations(namespace string) NatGatewayPublicIPAssociationNamespaceLister {
	return natGatewayPublicIPAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NatGatewayPublicIPAssociationNamespaceLister helps list and get NatGatewayPublicIPAssociations.
type NatGatewayPublicIPAssociationNamespaceLister interface {
	// List lists all NatGatewayPublicIPAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NatGatewayPublicIPAssociation, err error)
	// Get retrieves the NatGatewayPublicIPAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NatGatewayPublicIPAssociation, error)
	NatGatewayPublicIPAssociationNamespaceListerExpansion
}

// natGatewayPublicIPAssociationNamespaceLister implements the NatGatewayPublicIPAssociationNamespaceLister
// interface.
type natGatewayPublicIPAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NatGatewayPublicIPAssociations in the indexer for a given namespace.
func (s natGatewayPublicIPAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NatGatewayPublicIPAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatGatewayPublicIPAssociation))
	})
	return ret, err
}

// Get retrieves the NatGatewayPublicIPAssociation from the indexer for a given namespace and name.
func (s natGatewayPublicIPAssociationNamespaceLister) Get(name string) (*v1alpha1.NatGatewayPublicIPAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("natgatewaypublicipassociation"), name)
	}
	return obj.(*v1alpha1.NatGatewayPublicIPAssociation), nil
}
