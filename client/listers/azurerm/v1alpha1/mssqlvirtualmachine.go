/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// MssqlVirtualMachineLister helps list MssqlVirtualMachines.
type MssqlVirtualMachineLister interface {
	// List lists all MssqlVirtualMachines in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MssqlVirtualMachine, err error)
	// MssqlVirtualMachines returns an object that can list and get MssqlVirtualMachines.
	MssqlVirtualMachines(namespace string) MssqlVirtualMachineNamespaceLister
	MssqlVirtualMachineListerExpansion
}

// mssqlVirtualMachineLister implements the MssqlVirtualMachineLister interface.
type mssqlVirtualMachineLister struct {
	indexer cache.Indexer
}

// NewMssqlVirtualMachineLister returns a new MssqlVirtualMachineLister.
func NewMssqlVirtualMachineLister(indexer cache.Indexer) MssqlVirtualMachineLister {
	return &mssqlVirtualMachineLister{indexer: indexer}
}

// List lists all MssqlVirtualMachines in the indexer.
func (s *mssqlVirtualMachineLister) List(selector labels.Selector) (ret []*v1alpha1.MssqlVirtualMachine, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MssqlVirtualMachine))
	})
	return ret, err
}

// MssqlVirtualMachines returns an object that can list and get MssqlVirtualMachines.
func (s *mssqlVirtualMachineLister) MssqlVirtualMachines(namespace string) MssqlVirtualMachineNamespaceLister {
	return mssqlVirtualMachineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MssqlVirtualMachineNamespaceLister helps list and get MssqlVirtualMachines.
type MssqlVirtualMachineNamespaceLister interface {
	// List lists all MssqlVirtualMachines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MssqlVirtualMachine, err error)
	// Get retrieves the MssqlVirtualMachine from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MssqlVirtualMachine, error)
	MssqlVirtualMachineNamespaceListerExpansion
}

// mssqlVirtualMachineNamespaceLister implements the MssqlVirtualMachineNamespaceLister
// interface.
type mssqlVirtualMachineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MssqlVirtualMachines in the indexer for a given namespace.
func (s mssqlVirtualMachineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MssqlVirtualMachine, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MssqlVirtualMachine))
	})
	return ret, err
}

// Get retrieves the MssqlVirtualMachine from the indexer for a given namespace and name.
func (s mssqlVirtualMachineNamespaceLister) Get(name string) (*v1alpha1.MssqlVirtualMachine, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mssqlvirtualmachine"), name)
	}
	return obj.(*v1alpha1.MssqlVirtualMachine), nil
}
