/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// LinuxVirtualMachineScaleSetLister helps list LinuxVirtualMachineScaleSets.
type LinuxVirtualMachineScaleSetLister interface {
	// List lists all LinuxVirtualMachineScaleSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LinuxVirtualMachineScaleSet, err error)
	// LinuxVirtualMachineScaleSets returns an object that can list and get LinuxVirtualMachineScaleSets.
	LinuxVirtualMachineScaleSets(namespace string) LinuxVirtualMachineScaleSetNamespaceLister
	LinuxVirtualMachineScaleSetListerExpansion
}

// linuxVirtualMachineScaleSetLister implements the LinuxVirtualMachineScaleSetLister interface.
type linuxVirtualMachineScaleSetLister struct {
	indexer cache.Indexer
}

// NewLinuxVirtualMachineScaleSetLister returns a new LinuxVirtualMachineScaleSetLister.
func NewLinuxVirtualMachineScaleSetLister(indexer cache.Indexer) LinuxVirtualMachineScaleSetLister {
	return &linuxVirtualMachineScaleSetLister{indexer: indexer}
}

// List lists all LinuxVirtualMachineScaleSets in the indexer.
func (s *linuxVirtualMachineScaleSetLister) List(selector labels.Selector) (ret []*v1alpha1.LinuxVirtualMachineScaleSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LinuxVirtualMachineScaleSet))
	})
	return ret, err
}

// LinuxVirtualMachineScaleSets returns an object that can list and get LinuxVirtualMachineScaleSets.
func (s *linuxVirtualMachineScaleSetLister) LinuxVirtualMachineScaleSets(namespace string) LinuxVirtualMachineScaleSetNamespaceLister {
	return linuxVirtualMachineScaleSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LinuxVirtualMachineScaleSetNamespaceLister helps list and get LinuxVirtualMachineScaleSets.
type LinuxVirtualMachineScaleSetNamespaceLister interface {
	// List lists all LinuxVirtualMachineScaleSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LinuxVirtualMachineScaleSet, err error)
	// Get retrieves the LinuxVirtualMachineScaleSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LinuxVirtualMachineScaleSet, error)
	LinuxVirtualMachineScaleSetNamespaceListerExpansion
}

// linuxVirtualMachineScaleSetNamespaceLister implements the LinuxVirtualMachineScaleSetNamespaceLister
// interface.
type linuxVirtualMachineScaleSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LinuxVirtualMachineScaleSets in the indexer for a given namespace.
func (s linuxVirtualMachineScaleSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LinuxVirtualMachineScaleSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LinuxVirtualMachineScaleSet))
	})
	return ret, err
}

// Get retrieves the LinuxVirtualMachineScaleSet from the indexer for a given namespace and name.
func (s linuxVirtualMachineScaleSetNamespaceLister) Get(name string) (*v1alpha1.LinuxVirtualMachineScaleSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("linuxvirtualmachinescaleset"), name)
	}
	return obj.(*v1alpha1.LinuxVirtualMachineScaleSet), nil
}
