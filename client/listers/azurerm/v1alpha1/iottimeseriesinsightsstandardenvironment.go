/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// IotTimeSeriesInsightsStandardEnvironmentLister helps list IotTimeSeriesInsightsStandardEnvironments.
type IotTimeSeriesInsightsStandardEnvironmentLister interface {
	// List lists all IotTimeSeriesInsightsStandardEnvironments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IotTimeSeriesInsightsStandardEnvironment, err error)
	// IotTimeSeriesInsightsStandardEnvironments returns an object that can list and get IotTimeSeriesInsightsStandardEnvironments.
	IotTimeSeriesInsightsStandardEnvironments(namespace string) IotTimeSeriesInsightsStandardEnvironmentNamespaceLister
	IotTimeSeriesInsightsStandardEnvironmentListerExpansion
}

// iotTimeSeriesInsightsStandardEnvironmentLister implements the IotTimeSeriesInsightsStandardEnvironmentLister interface.
type iotTimeSeriesInsightsStandardEnvironmentLister struct {
	indexer cache.Indexer
}

// NewIotTimeSeriesInsightsStandardEnvironmentLister returns a new IotTimeSeriesInsightsStandardEnvironmentLister.
func NewIotTimeSeriesInsightsStandardEnvironmentLister(indexer cache.Indexer) IotTimeSeriesInsightsStandardEnvironmentLister {
	return &iotTimeSeriesInsightsStandardEnvironmentLister{indexer: indexer}
}

// List lists all IotTimeSeriesInsightsStandardEnvironments in the indexer.
func (s *iotTimeSeriesInsightsStandardEnvironmentLister) List(selector labels.Selector) (ret []*v1alpha1.IotTimeSeriesInsightsStandardEnvironment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IotTimeSeriesInsightsStandardEnvironment))
	})
	return ret, err
}

// IotTimeSeriesInsightsStandardEnvironments returns an object that can list and get IotTimeSeriesInsightsStandardEnvironments.
func (s *iotTimeSeriesInsightsStandardEnvironmentLister) IotTimeSeriesInsightsStandardEnvironments(namespace string) IotTimeSeriesInsightsStandardEnvironmentNamespaceLister {
	return iotTimeSeriesInsightsStandardEnvironmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IotTimeSeriesInsightsStandardEnvironmentNamespaceLister helps list and get IotTimeSeriesInsightsStandardEnvironments.
type IotTimeSeriesInsightsStandardEnvironmentNamespaceLister interface {
	// List lists all IotTimeSeriesInsightsStandardEnvironments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IotTimeSeriesInsightsStandardEnvironment, err error)
	// Get retrieves the IotTimeSeriesInsightsStandardEnvironment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IotTimeSeriesInsightsStandardEnvironment, error)
	IotTimeSeriesInsightsStandardEnvironmentNamespaceListerExpansion
}

// iotTimeSeriesInsightsStandardEnvironmentNamespaceLister implements the IotTimeSeriesInsightsStandardEnvironmentNamespaceLister
// interface.
type iotTimeSeriesInsightsStandardEnvironmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IotTimeSeriesInsightsStandardEnvironments in the indexer for a given namespace.
func (s iotTimeSeriesInsightsStandardEnvironmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IotTimeSeriesInsightsStandardEnvironment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IotTimeSeriesInsightsStandardEnvironment))
	})
	return ret, err
}

// Get retrieves the IotTimeSeriesInsightsStandardEnvironment from the indexer for a given namespace and name.
func (s iotTimeSeriesInsightsStandardEnvironmentNamespaceLister) Get(name string) (*v1alpha1.IotTimeSeriesInsightsStandardEnvironment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iottimeseriesinsightsstandardenvironment"), name)
	}
	return obj.(*v1alpha1.IotTimeSeriesInsightsStandardEnvironment), nil
}
