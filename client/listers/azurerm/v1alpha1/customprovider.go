/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// CustomProviderLister helps list CustomProviders.
type CustomProviderLister interface {
	// List lists all CustomProviders in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CustomProvider, err error)
	// CustomProviders returns an object that can list and get CustomProviders.
	CustomProviders(namespace string) CustomProviderNamespaceLister
	CustomProviderListerExpansion
}

// customProviderLister implements the CustomProviderLister interface.
type customProviderLister struct {
	indexer cache.Indexer
}

// NewCustomProviderLister returns a new CustomProviderLister.
func NewCustomProviderLister(indexer cache.Indexer) CustomProviderLister {
	return &customProviderLister{indexer: indexer}
}

// List lists all CustomProviders in the indexer.
func (s *customProviderLister) List(selector labels.Selector) (ret []*v1alpha1.CustomProvider, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomProvider))
	})
	return ret, err
}

// CustomProviders returns an object that can list and get CustomProviders.
func (s *customProviderLister) CustomProviders(namespace string) CustomProviderNamespaceLister {
	return customProviderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomProviderNamespaceLister helps list and get CustomProviders.
type CustomProviderNamespaceLister interface {
	// List lists all CustomProviders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CustomProvider, err error)
	// Get retrieves the CustomProvider from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CustomProvider, error)
	CustomProviderNamespaceListerExpansion
}

// customProviderNamespaceLister implements the CustomProviderNamespaceLister
// interface.
type customProviderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomProviders in the indexer for a given namespace.
func (s customProviderNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomProvider, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomProvider))
	})
	return ret, err
}

// Get retrieves the CustomProvider from the indexer for a given namespace and name.
func (s customProviderNamespaceLister) Get(name string) (*v1alpha1.CustomProvider, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customprovider"), name)
	}
	return obj.(*v1alpha1.CustomProvider), nil
}
