/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// FunctionAppSlotLister helps list FunctionAppSlots.
type FunctionAppSlotLister interface {
	// List lists all FunctionAppSlots in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FunctionAppSlot, err error)
	// FunctionAppSlots returns an object that can list and get FunctionAppSlots.
	FunctionAppSlots(namespace string) FunctionAppSlotNamespaceLister
	FunctionAppSlotListerExpansion
}

// functionAppSlotLister implements the FunctionAppSlotLister interface.
type functionAppSlotLister struct {
	indexer cache.Indexer
}

// NewFunctionAppSlotLister returns a new FunctionAppSlotLister.
func NewFunctionAppSlotLister(indexer cache.Indexer) FunctionAppSlotLister {
	return &functionAppSlotLister{indexer: indexer}
}

// List lists all FunctionAppSlots in the indexer.
func (s *functionAppSlotLister) List(selector labels.Selector) (ret []*v1alpha1.FunctionAppSlot, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FunctionAppSlot))
	})
	return ret, err
}

// FunctionAppSlots returns an object that can list and get FunctionAppSlots.
func (s *functionAppSlotLister) FunctionAppSlots(namespace string) FunctionAppSlotNamespaceLister {
	return functionAppSlotNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FunctionAppSlotNamespaceLister helps list and get FunctionAppSlots.
type FunctionAppSlotNamespaceLister interface {
	// List lists all FunctionAppSlots in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FunctionAppSlot, err error)
	// Get retrieves the FunctionAppSlot from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FunctionAppSlot, error)
	FunctionAppSlotNamespaceListerExpansion
}

// functionAppSlotNamespaceLister implements the FunctionAppSlotNamespaceLister
// interface.
type functionAppSlotNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FunctionAppSlots in the indexer for a given namespace.
func (s functionAppSlotNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FunctionAppSlot, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FunctionAppSlot))
	})
	return ret, err
}

// Get retrieves the FunctionAppSlot from the indexer for a given namespace and name.
func (s functionAppSlotNamespaceLister) Get(name string) (*v1alpha1.FunctionAppSlot, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("functionappslot"), name)
	}
	return obj.(*v1alpha1.FunctionAppSlot), nil
}
