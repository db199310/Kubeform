/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// DatabaseMigrationProjectLister helps list DatabaseMigrationProjects.
type DatabaseMigrationProjectLister interface {
	// List lists all DatabaseMigrationProjects in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DatabaseMigrationProject, err error)
	// DatabaseMigrationProjects returns an object that can list and get DatabaseMigrationProjects.
	DatabaseMigrationProjects(namespace string) DatabaseMigrationProjectNamespaceLister
	DatabaseMigrationProjectListerExpansion
}

// databaseMigrationProjectLister implements the DatabaseMigrationProjectLister interface.
type databaseMigrationProjectLister struct {
	indexer cache.Indexer
}

// NewDatabaseMigrationProjectLister returns a new DatabaseMigrationProjectLister.
func NewDatabaseMigrationProjectLister(indexer cache.Indexer) DatabaseMigrationProjectLister {
	return &databaseMigrationProjectLister{indexer: indexer}
}

// List lists all DatabaseMigrationProjects in the indexer.
func (s *databaseMigrationProjectLister) List(selector labels.Selector) (ret []*v1alpha1.DatabaseMigrationProject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatabaseMigrationProject))
	})
	return ret, err
}

// DatabaseMigrationProjects returns an object that can list and get DatabaseMigrationProjects.
func (s *databaseMigrationProjectLister) DatabaseMigrationProjects(namespace string) DatabaseMigrationProjectNamespaceLister {
	return databaseMigrationProjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DatabaseMigrationProjectNamespaceLister helps list and get DatabaseMigrationProjects.
type DatabaseMigrationProjectNamespaceLister interface {
	// List lists all DatabaseMigrationProjects in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DatabaseMigrationProject, err error)
	// Get retrieves the DatabaseMigrationProject from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DatabaseMigrationProject, error)
	DatabaseMigrationProjectNamespaceListerExpansion
}

// databaseMigrationProjectNamespaceLister implements the DatabaseMigrationProjectNamespaceLister
// interface.
type databaseMigrationProjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DatabaseMigrationProjects in the indexer for a given namespace.
func (s databaseMigrationProjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DatabaseMigrationProject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatabaseMigrationProject))
	})
	return ret, err
}

// Get retrieves the DatabaseMigrationProject from the indexer for a given namespace and name.
func (s databaseMigrationProjectNamespaceLister) Get(name string) (*v1alpha1.DatabaseMigrationProject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("databasemigrationproject"), name)
	}
	return obj.(*v1alpha1.DatabaseMigrationProject), nil
}
