/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// DevTestGlobalVmShutdownScheduleLister helps list DevTestGlobalVmShutdownSchedules.
type DevTestGlobalVmShutdownScheduleLister interface {
	// List lists all DevTestGlobalVmShutdownSchedules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestGlobalVmShutdownSchedule, err error)
	// DevTestGlobalVmShutdownSchedules returns an object that can list and get DevTestGlobalVmShutdownSchedules.
	DevTestGlobalVmShutdownSchedules(namespace string) DevTestGlobalVmShutdownScheduleNamespaceLister
	DevTestGlobalVmShutdownScheduleListerExpansion
}

// devTestGlobalVmShutdownScheduleLister implements the DevTestGlobalVmShutdownScheduleLister interface.
type devTestGlobalVmShutdownScheduleLister struct {
	indexer cache.Indexer
}

// NewDevTestGlobalVmShutdownScheduleLister returns a new DevTestGlobalVmShutdownScheduleLister.
func NewDevTestGlobalVmShutdownScheduleLister(indexer cache.Indexer) DevTestGlobalVmShutdownScheduleLister {
	return &devTestGlobalVmShutdownScheduleLister{indexer: indexer}
}

// List lists all DevTestGlobalVmShutdownSchedules in the indexer.
func (s *devTestGlobalVmShutdownScheduleLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestGlobalVmShutdownSchedule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestGlobalVmShutdownSchedule))
	})
	return ret, err
}

// DevTestGlobalVmShutdownSchedules returns an object that can list and get DevTestGlobalVmShutdownSchedules.
func (s *devTestGlobalVmShutdownScheduleLister) DevTestGlobalVmShutdownSchedules(namespace string) DevTestGlobalVmShutdownScheduleNamespaceLister {
	return devTestGlobalVmShutdownScheduleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DevTestGlobalVmShutdownScheduleNamespaceLister helps list and get DevTestGlobalVmShutdownSchedules.
type DevTestGlobalVmShutdownScheduleNamespaceLister interface {
	// List lists all DevTestGlobalVmShutdownSchedules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestGlobalVmShutdownSchedule, err error)
	// Get retrieves the DevTestGlobalVmShutdownSchedule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DevTestGlobalVmShutdownSchedule, error)
	DevTestGlobalVmShutdownScheduleNamespaceListerExpansion
}

// devTestGlobalVmShutdownScheduleNamespaceLister implements the DevTestGlobalVmShutdownScheduleNamespaceLister
// interface.
type devTestGlobalVmShutdownScheduleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DevTestGlobalVmShutdownSchedules in the indexer for a given namespace.
func (s devTestGlobalVmShutdownScheduleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestGlobalVmShutdownSchedule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestGlobalVmShutdownSchedule))
	})
	return ret, err
}

// Get retrieves the DevTestGlobalVmShutdownSchedule from the indexer for a given namespace and name.
func (s devTestGlobalVmShutdownScheduleNamespaceLister) Get(name string) (*v1alpha1.DevTestGlobalVmShutdownSchedule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("devtestglobalvmshutdownschedule"), name)
	}
	return obj.(*v1alpha1.DevTestGlobalVmShutdownSchedule), nil
}
