/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "kubeform.dev/kubeform/apis/modules/v1alpha2"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StratosAzStgv1Lister helps list StratosAzStgv1s.
type StratosAzStgv1Lister interface {
	// List lists all StratosAzStgv1s in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.StratosAzStgv1, err error)
	// StratosAzStgv1s returns an object that can list and get StratosAzStgv1s.
	StratosAzStgv1s(namespace string) StratosAzStgv1NamespaceLister
	StratosAzStgv1ListerExpansion
}

// stratosAzStgv1Lister implements the StratosAzStgv1Lister interface.
type stratosAzStgv1Lister struct {
	indexer cache.Indexer
}

// NewStratosAzStgv1Lister returns a new StratosAzStgv1Lister.
func NewStratosAzStgv1Lister(indexer cache.Indexer) StratosAzStgv1Lister {
	return &stratosAzStgv1Lister{indexer: indexer}
}

// List lists all StratosAzStgv1s in the indexer.
func (s *stratosAzStgv1Lister) List(selector labels.Selector) (ret []*v1alpha2.StratosAzStgv1, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.StratosAzStgv1))
	})
	return ret, err
}

// StratosAzStgv1s returns an object that can list and get StratosAzStgv1s.
func (s *stratosAzStgv1Lister) StratosAzStgv1s(namespace string) StratosAzStgv1NamespaceLister {
	return stratosAzStgv1NamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StratosAzStgv1NamespaceLister helps list and get StratosAzStgv1s.
type StratosAzStgv1NamespaceLister interface {
	// List lists all StratosAzStgv1s in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.StratosAzStgv1, err error)
	// Get retrieves the StratosAzStgv1 from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.StratosAzStgv1, error)
	StratosAzStgv1NamespaceListerExpansion
}

// stratosAzStgv1NamespaceLister implements the StratosAzStgv1NamespaceLister
// interface.
type stratosAzStgv1NamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StratosAzStgv1s in the indexer for a given namespace.
func (s stratosAzStgv1NamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.StratosAzStgv1, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.StratosAzStgv1))
	})
	return ret, err
}

// Get retrieves the StratosAzStgv1 from the indexer for a given namespace and name.
func (s stratosAzStgv1NamespaceLister) Get(name string) (*v1alpha2.StratosAzStgv1, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("stratosazstgv1"), name)
	}
	return obj.(*v1alpha2.StratosAzStgv1), nil
}
