/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/modules/v1alpha1"
)

// SDPAzADLSv1Lister helps list SDPAzADLSv1s.
type SDPAzADLSv1Lister interface {
	// List lists all SDPAzADLSv1s in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SDPAzADLSv1, err error)
	// SDPAzADLSv1s returns an object that can list and get SDPAzADLSv1s.
	SDPAzADLSv1s(namespace string) SDPAzADLSv1NamespaceLister
	SDPAzADLSv1ListerExpansion
}

// sDPAzADLSv1Lister implements the SDPAzADLSv1Lister interface.
type sDPAzADLSv1Lister struct {
	indexer cache.Indexer
}

// NewSDPAzADLSv1Lister returns a new SDPAzADLSv1Lister.
func NewSDPAzADLSv1Lister(indexer cache.Indexer) SDPAzADLSv1Lister {
	return &sDPAzADLSv1Lister{indexer: indexer}
}

// List lists all SDPAzADLSv1s in the indexer.
func (s *sDPAzADLSv1Lister) List(selector labels.Selector) (ret []*v1alpha1.SDPAzADLSv1, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SDPAzADLSv1))
	})
	return ret, err
}

// SDPAzADLSv1s returns an object that can list and get SDPAzADLSv1s.
func (s *sDPAzADLSv1Lister) SDPAzADLSv1s(namespace string) SDPAzADLSv1NamespaceLister {
	return sDPAzADLSv1NamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SDPAzADLSv1NamespaceLister helps list and get SDPAzADLSv1s.
type SDPAzADLSv1NamespaceLister interface {
	// List lists all SDPAzADLSv1s in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SDPAzADLSv1, err error)
	// Get retrieves the SDPAzADLSv1 from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SDPAzADLSv1, error)
	SDPAzADLSv1NamespaceListerExpansion
}

// sDPAzADLSv1NamespaceLister implements the SDPAzADLSv1NamespaceLister
// interface.
type sDPAzADLSv1NamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SDPAzADLSv1s in the indexer for a given namespace.
func (s sDPAzADLSv1NamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SDPAzADLSv1, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SDPAzADLSv1))
	})
	return ret, err
}

// Get retrieves the SDPAzADLSv1 from the indexer for a given namespace and name.
func (s sDPAzADLSv1NamespaceLister) Get(name string) (*v1alpha1.SDPAzADLSv1, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sdpazadlsv1"), name)
	}
	return obj.(*v1alpha1.SDPAzADLSv1), nil
}
